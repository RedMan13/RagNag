const glfw = require('glfw-raub');

const names = module.exports.names = {
    'Escape': glfw.KEY_ESCAPE,
    'F1': glfw.KEY_F1,
    'F2': glfw.KEY_F2,
    'F3': glfw.KEY_F3,
    'F4': glfw.KEY_F4,
    'F5': glfw.KEY_F5,
    'F6': glfw.KEY_F6,
    'F7': glfw.KEY_F7,
    'F8': glfw.KEY_F8,
    'F9': glfw.KEY_F9,
    'F10': glfw.KEY_F10,
    'F11': glfw.KEY_F11,
    'F12': glfw.KEY_F12,
    'F13': glfw.KEY_F13,
    'F14': glfw.KEY_F14,
    'F15': glfw.KEY_F15,
    'F16': glfw.KEY_F16,
    'F17': glfw.KEY_F17,
    'F18': glfw.KEY_F18,
    'F19': glfw.KEY_F19,
    'F20': glfw.KEY_F20,
    'F21': glfw.KEY_F21,
    'F22': glfw.KEY_F22,
    'F23': glfw.KEY_F23,
    'F24': glfw.KEY_F24,
    'F25': glfw.KEY_F25,
    'PrintScreen': glfw.KEY_PRINT_SCREEN,
    'Pause': glfw.KEY_PAUSE,
    'ScrollLock': glfw.KEY_SCROLL_LOCK,
    'Insert': glfw.KEY_INSERT,
    'Delete': glfw.KEY_DELETE,
    'Backquote': glfw.KEY_GRAVE_ACCENT,
    '1': glfw.KEY_1,
    '2': glfw.KEY_2,
    '3': glfw.KEY_3,
    '4': glfw.KEY_4,
    '5': glfw.KEY_5,
    '6': glfw.KEY_6,
    '7': glfw.KEY_7,
    '8': glfw.KEY_8,
    '9': glfw.KEY_9,
    '0': glfw.KEY_0,
    'Minus': glfw.KEY_MINUS,
    'Equal': glfw.KEY_EQUAL,
    'Backspace': glfw.KEY_BACKSPACE,
    'Home': glfw.KEY_HOME,
    'Tab': glfw.KEY_TAB,
    'Q': glfw.KEY_Q,
    'W': glfw.KEY_W,
    'E': glfw.KEY_E,
    'R': glfw.KEY_R,
    'T': glfw.KEY_T,
    'Y': glfw.KEY_Y,
    'U': glfw.KEY_U,
    'I': glfw.KEY_I,
    'O': glfw.KEY_O,
    'P': glfw.KEY_P,
    'LeftBracket': glfw.KEY_LEFT_BRACKET,
    'RightBracket': glfw.KEY_RIGHT_BRACKET,
    'Backslash': glfw.KEY_BACKSLASH,
    'PageUp': glfw.KEY_PAGE_UP,
    'CapsLock': glfw.KEY_CAPS_LOCK,
    'A': glfw.KEY_A,
    'S': glfw.KEY_S,
    'D': glfw.KEY_D,
    'F': glfw.KEY_F,
    'G': glfw.KEY_G,
    'H': glfw.KEY_H,
    'J': glfw.KEY_J,
    'K': glfw.KEY_K,
    'L': glfw.KEY_L,
    'Semicolon': glfw.KEY_SEMICOLON,
    'Apostrophe': glfw.KEY_APOSTROPHE,
    'Enter': glfw.KEY_ENTER,
    'PageDown': glfw.KEY_PAGE_DOWN,
    'ShiftLeft': glfw.KEY_LEFT_SHIFT,
    'Z': glfw.KEY_Z,
    'X': glfw.KEY_X,
    'C': glfw.KEY_C,
    'V': glfw.KEY_V,
    'B': glfw.KEY_B,
    'M': glfw.KEY_M,
    'N': glfw.KEY_N,
    'Comma': glfw.KEY_COMMA,
    'Period': glfw.KEY_PERIOD,
    'Slash': glfw.KEY_SLASH,
    'ShiftRight': glfw.KEY_RIGHT_SHIFT,
    'End': glfw.KEY_END,
    'ControlLeft': glfw.KEY_LEFT_CONTROL,
    'MetaLeft': glfw.KEY_LEFT_SUPER,
    'AltLeft': glfw.KEY_LEFT_ALT,
    'Space': glfw.KEY_SPACE,
    'AltRight': glfw.KEY_RIGHT_ALT,
    'ContextMenu': glfw.KEY_MENU,
    'MetaRight': glfw.KEY_RIGHT_SUPER,
    'ControlRight': glfw.KEY_RIGHT_CONTROL,
    'ArrowLeft': glfw.KEY_LEFT,
    'ArrowUp': glfw.KEY_UP,
    'ArrowDown': glfw.KEY_DOWN,
    'ArrowRight': glfw.KEY_RIGHT,
    'NumLock': glfw.KEY_NUM_LOCK,
    'Numpad0': glfw.KEY_KP_0,
    'Numpad1': glfw.KEY_KP_1,
    'Numpad2': glfw.KEY_KP_2,
    'Numpad3': glfw.KEY_KP_3,
    'Numpad4': glfw.KEY_KP_4,
    'Numpad5': glfw.KEY_KP_5,
    'Numpad6': glfw.KEY_KP_6,
    'Numpad7': glfw.KEY_KP_7,
    'Numpad8': glfw.KEY_KP_8,
    'Numpad9': glfw.KEY_KP_9,
    'NumpadAdd': glfw.KEY_KP_ADD,
    'NumpadDecimal': glfw.KEY_KP_DECIMAL,
    'NumpadDivide': glfw.KEY_KP_DIVIDE,
    'NumpadEnter': glfw.KEY_KP_ENTER,
    'NumpadEqual': glfw.KEY_KP_EQUAL,
    'NumpadMultiply': glfw.KEY_KP_MULTIPLY,
    'NumpadSubtract': glfw.KEY_KP_SUBTRACT,
    'MouseLeft': -1,
    'MouseMiddle': -2,
    'MouseRight': -3,
    'Mouse4': -4,
    'Mouse5': -5,
    'Mouse6': -6,
    'Mouse7': -7,
    'Mouse8': -8,
};
const descriptives = module.exports.descriptives = Object.fromEntries(Object.entries(names)
    .map(([name, value]) => [value, name
        .split('')
        .map(char => char.charCodeAt() & 0b01000000 ? char : ` ${char}`)
        .join('')
        .trimStart()]));
const activated = {};
const keys = module.exports.keys = {}
/** @param {import('glfw-raub').Window} window */
module.exports.handleKeys = function(window) {
    for (const name in keys) {
        const [keyIds, once, action] = keys[name];
        const down = keyIds.every((keyId) => Math.sign(keyId) === -1 ? window.getMouseButton(-1 - keyId) : window.getKey(keyId));
        if (!down) { delete activated[name]; continue; }
        if (once && activated[name]) continue;
        if (down) activated[name] = true;
        action();
    }
}
module.exports.stringifyKey = function(name) {
    return keys[name][0].map(keyId => descriptives[keyId]).join(' + ');
}